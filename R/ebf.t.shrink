# Calculate normal EBFs with shrinkage

ebf.norm.shrink <- function(x, se, xmin, xmax, index, complement=FALSE) {

  # IVW means of each pair of elements in x
  ivw.var = sapply(1/se^2,"+",1/se[index]^2)
  ivw.mean = sapply(x/se^2, "+", (x/se^2)[index]) / ivw.var

  # Laplace approximations for posterior mean likelihoods
  laplace = dnorm(x[index], ivw.mean, se[index]) *
    t(dnorm(x, t(ivw.mean), se)) * sqrt(2*pi/ivw.var)

  area1 = pnorm(xmax, ivw.mean, 1/sqrt(ivw.var)) -
             pnorm(xmin, ivw.mean, 1/sqrt(ivw.var))
  area2 = pnorm(xmax, x, se) - pnorm(xmin, x, se)
  if (complement == TRUE) {
    area1 = 1-area1
    area2 = 1-area2
  }
  laplace = laplace * area1 / t(matrix(area2, nrow=length(x), ncol=nrow(laplace)))

  # adjust the diagonal elements for bias
  adjust = sapply(index, function(ix) {a=rep(0,ncol(laplace));a[ix]=area2[ix]/2;a})
  laplace = laplace / exp(t(adjust))

  # form the EBFs
  apply(laplace, 1, mean)

}
